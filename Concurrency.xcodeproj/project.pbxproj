// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"Concurrency::ConcurrencyPackageTests::ProductTarget" /* ConcurrencyPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_59 /* Build configuration list for PBXAggregateTarget "ConcurrencyPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_62 /* PBXTargetDependency */,
			);
			name = ConcurrencyPackageTests;
			productName = ConcurrencyPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_40 /* AtomicBool.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* AtomicBool.swift */; };
		OBJ_41 /* AtomicInt.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* AtomicInt.swift */; };
		OBJ_42 /* AtomicReference.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* AtomicReference.swift */; };
		OBJ_43 /* CountDownLatch.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* CountDownLatch.swift */; };
		OBJ_44 /* ConcurrentSequenceExecutor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* ConcurrentSequenceExecutor.swift */; };
		OBJ_45 /* ImmediateSerialSequenceExecutor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* ImmediateSerialSequenceExecutor.swift */; };
		OBJ_46 /* SequenceExecutor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* SequenceExecutor.swift */; };
		OBJ_47 /* Task.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* Task.swift */; };
		OBJ_49 /* ObjCBridges.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Concurrency::ObjCBridges::Product" /* ObjCBridges.framework */; };
		OBJ_57 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_68 /* AtomicBoolTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_25 /* AtomicBoolTests.swift */; };
		OBJ_69 /* AtomicIntTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_26 /* AtomicIntTests.swift */; };
		OBJ_70 /* AtomicReferenceTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_27 /* AtomicReferenceTests.swift */; };
		OBJ_71 /* CountDownLatchTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* CountDownLatchTests.swift */; };
		OBJ_72 /* ConcurrentSequenceExecutorTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_30 /* ConcurrentSequenceExecutorTests.swift */; };
		OBJ_74 /* Concurrency.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Concurrency::Concurrency::Product" /* Concurrency.framework */; };
		OBJ_75 /* ObjCBridges.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Concurrency::ObjCBridges::Product" /* ObjCBridges.framework */; };
		OBJ_82 /* AtomicBridges.m in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* AtomicBridges.m */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		41407A7621FA492D0081B8A9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Concurrency::ObjCBridges";
			remoteInfo = ObjCBridges;
		};
		41407A7721FA492E0081B8A9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Concurrency::Concurrency";
			remoteInfo = Concurrency;
		};
		41407A7821FA492E0081B8A9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Concurrency::ObjCBridges";
			remoteInfo = ObjCBridges;
		};
		41407A7921FA492E0081B8A9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Concurrency::ConcurrencyTests";
			remoteInfo = ConcurrencyTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		"Concurrency::Concurrency::Product" /* Concurrency.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Concurrency.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Concurrency::ConcurrencyTests::Product" /* ConcurrencyTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = ConcurrencyTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		"Concurrency::ObjCBridges::Product" /* ObjCBridges.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = ObjCBridges.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_11 /* AtomicBridges.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = AtomicBridges.h; sourceTree = "<group>"; };
		OBJ_12 /* module.modulemap */ = {isa = PBXFileReference; lastKnownFileType = "sourcecode.module-map"; name = module.modulemap; path = "/Users/yiw/Uber/GitHub/swift-concurrency/Concurrency.xcodeproj/GeneratedModuleMap/ObjCBridges/module.modulemap"; sourceTree = "<group>"; };
		OBJ_14 /* AtomicBool.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AtomicBool.swift; sourceTree = "<group>"; };
		OBJ_15 /* AtomicInt.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AtomicInt.swift; sourceTree = "<group>"; };
		OBJ_16 /* AtomicReference.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AtomicReference.swift; sourceTree = "<group>"; };
		OBJ_17 /* CountDownLatch.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CountDownLatch.swift; sourceTree = "<group>"; };
		OBJ_19 /* ConcurrentSequenceExecutor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ConcurrentSequenceExecutor.swift; sourceTree = "<group>"; };
		OBJ_20 /* ImmediateSerialSequenceExecutor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ImmediateSerialSequenceExecutor.swift; sourceTree = "<group>"; };
		OBJ_21 /* SequenceExecutor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SequenceExecutor.swift; sourceTree = "<group>"; };
		OBJ_22 /* Task.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Task.swift; sourceTree = "<group>"; };
		OBJ_25 /* AtomicBoolTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AtomicBoolTests.swift; sourceTree = "<group>"; };
		OBJ_26 /* AtomicIntTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AtomicIntTests.swift; sourceTree = "<group>"; };
		OBJ_27 /* AtomicReferenceTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AtomicReferenceTests.swift; sourceTree = "<group>"; };
		OBJ_28 /* CountDownLatchTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CountDownLatchTests.swift; sourceTree = "<group>"; };
		OBJ_30 /* ConcurrentSequenceExecutorTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ConcurrentSequenceExecutorTests.swift; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_9 /* AtomicBridges.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = AtomicBridges.m; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_48 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_49 /* ObjCBridges.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_73 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_74 /* Concurrency.framework in Frameworks */,
				OBJ_75 /* ObjCBridges.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_83 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_10 /* include */ = {
			isa = PBXGroup;
			children = (
				OBJ_11 /* AtomicBridges.h */,
				OBJ_12 /* module.modulemap */,
			);
			path = include;
			sourceTree = "<group>";
		};
		OBJ_13 /* Concurrency */ = {
			isa = PBXGroup;
			children = (
				OBJ_14 /* AtomicBool.swift */,
				OBJ_15 /* AtomicInt.swift */,
				OBJ_16 /* AtomicReference.swift */,
				OBJ_17 /* CountDownLatch.swift */,
				OBJ_18 /* Executor */,
			);
			name = Concurrency;
			path = Sources/Concurrency;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_18 /* Executor */ = {
			isa = PBXGroup;
			children = (
				OBJ_19 /* ConcurrentSequenceExecutor.swift */,
				OBJ_20 /* ImmediateSerialSequenceExecutor.swift */,
				OBJ_21 /* SequenceExecutor.swift */,
				OBJ_22 /* Task.swift */,
			);
			path = Executor;
			sourceTree = "<group>";
		};
		OBJ_23 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_24 /* ConcurrencyTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_24 /* ConcurrencyTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_25 /* AtomicBoolTests.swift */,
				OBJ_26 /* AtomicIntTests.swift */,
				OBJ_27 /* AtomicReferenceTests.swift */,
				OBJ_28 /* CountDownLatchTests.swift */,
				OBJ_29 /* Executor */,
			);
			name = ConcurrencyTests;
			path = Tests/ConcurrencyTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_29 /* Executor */ = {
			isa = PBXGroup;
			children = (
				OBJ_30 /* ConcurrentSequenceExecutorTests.swift */,
			);
			path = Executor;
			sourceTree = "<group>";
		};
		OBJ_31 /* Products */ = {
			isa = PBXGroup;
			children = (
				"Concurrency::ConcurrencyTests::Product" /* ConcurrencyTests.xctest */,
				"Concurrency::Concurrency::Product" /* Concurrency.framework */,
				"Concurrency::ObjCBridges::Product" /* ObjCBridges.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_23 /* Tests */,
				OBJ_31 /* Products */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* ObjCBridges */,
				OBJ_13 /* Concurrency */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* ObjCBridges */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* AtomicBridges.m */,
				OBJ_10 /* include */,
			);
			name = ObjCBridges;
			path = Sources/ObjCBridges;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"Concurrency::Concurrency" /* Concurrency */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_36 /* Build configuration list for PBXNativeTarget "Concurrency" */;
			buildPhases = (
				OBJ_39 /* Sources */,
				OBJ_48 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_50 /* PBXTargetDependency */,
			);
			name = Concurrency;
			productName = Concurrency;
			productReference = "Concurrency::Concurrency::Product" /* Concurrency.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Concurrency::ConcurrencyTests" /* ConcurrencyTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_64 /* Build configuration list for PBXNativeTarget "ConcurrencyTests" */;
			buildPhases = (
				OBJ_67 /* Sources */,
				OBJ_73 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_76 /* PBXTargetDependency */,
				OBJ_77 /* PBXTargetDependency */,
			);
			name = ConcurrencyTests;
			productName = ConcurrencyTests;
			productReference = "Concurrency::ConcurrencyTests::Product" /* ConcurrencyTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"Concurrency::ObjCBridges" /* ObjCBridges */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_78 /* Build configuration list for PBXNativeTarget "ObjCBridges" */;
			buildPhases = (
				OBJ_81 /* Sources */,
				OBJ_83 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = ObjCBridges;
			productName = ObjCBridges;
			productReference = "Concurrency::ObjCBridges::Product" /* ObjCBridges.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Concurrency::SwiftPMPackageDescription" /* ConcurrencyPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_53 /* Build configuration list for PBXNativeTarget "ConcurrencyPackageDescription" */;
			buildPhases = (
				OBJ_56 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = ConcurrencyPackageDescription;
			productName = ConcurrencyPackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
				TargetAttributes = {
					"Concurrency::Concurrency" = {
						LastSwiftMigration = 1010;
					};
				};
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "Concurrency" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_31 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"Concurrency::Concurrency" /* Concurrency */,
				"Concurrency::SwiftPMPackageDescription" /* ConcurrencyPackageDescription */,
				"Concurrency::ConcurrencyPackageTests::ProductTarget" /* ConcurrencyPackageTests */,
				"Concurrency::ConcurrencyTests" /* ConcurrencyTests */,
				"Concurrency::ObjCBridges" /* ObjCBridges */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_39 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_40 /* AtomicBool.swift in Sources */,
				OBJ_41 /* AtomicInt.swift in Sources */,
				OBJ_42 /* AtomicReference.swift in Sources */,
				OBJ_43 /* CountDownLatch.swift in Sources */,
				OBJ_44 /* ConcurrentSequenceExecutor.swift in Sources */,
				OBJ_45 /* ImmediateSerialSequenceExecutor.swift in Sources */,
				OBJ_46 /* SequenceExecutor.swift in Sources */,
				OBJ_47 /* Task.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_56 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_57 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_67 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_68 /* AtomicBoolTests.swift in Sources */,
				OBJ_69 /* AtomicIntTests.swift in Sources */,
				OBJ_70 /* AtomicReferenceTests.swift in Sources */,
				OBJ_71 /* CountDownLatchTests.swift in Sources */,
				OBJ_72 /* ConcurrentSequenceExecutorTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_81 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_82 /* AtomicBridges.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_50 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Concurrency::ObjCBridges" /* ObjCBridges */;
			targetProxy = 41407A7621FA492D0081B8A9 /* PBXContainerItemProxy */;
		};
		OBJ_62 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Concurrency::ConcurrencyTests" /* ConcurrencyTests */;
			targetProxy = 41407A7921FA492E0081B8A9 /* PBXContainerItemProxy */;
		};
		OBJ_76 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Concurrency::Concurrency" /* Concurrency */;
			targetProxy = 41407A7721FA492E0081B8A9 /* PBXContainerItemProxy */;
		};
		OBJ_77 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Concurrency::ObjCBridges" /* ObjCBridges */;
			targetProxy = 41407A7821FA492E0081B8A9 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "SWIFT_PACKAGE DEBUG";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_37 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/Sources/ObjCBridges/include",
					"$(SRCROOT)/Concurrency.xcodeproj/GeneratedModuleMap/ObjCBridges",
				);
				INFOPLIST_FILE = Concurrency.xcodeproj/Concurrency_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/Concurrency.xcodeproj/GeneratedModuleMap/ObjCBridges/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = Concurrency;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 4.2;
				TARGET_NAME = Concurrency;
			};
			name = Debug;
		};
		OBJ_38 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/Sources/ObjCBridges/include",
					"$(SRCROOT)/Concurrency.xcodeproj/GeneratedModuleMap/ObjCBridges",
				);
				INFOPLIST_FILE = Concurrency.xcodeproj/Concurrency_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/Concurrency.xcodeproj/GeneratedModuleMap/ObjCBridges/module.modulemap";
				PRODUCT_BUNDLE_IDENTIFIER = Concurrency;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 4.2;
				TARGET_NAME = Concurrency;
			};
			name = Release;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_54 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.10.1.0.10B61.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_55 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.10.1.0.10B61.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_60 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_61 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_65 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/Sources/ObjCBridges/include",
					"$(SRCROOT)/Concurrency.xcodeproj/GeneratedModuleMap/ObjCBridges",
				);
				INFOPLIST_FILE = Concurrency.xcodeproj/ConcurrencyTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/Concurrency.xcodeproj/GeneratedModuleMap/ObjCBridges/module.modulemap";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = ConcurrencyTests;
			};
			name = Debug;
		};
		OBJ_66 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/Sources/ObjCBridges/include",
					"$(SRCROOT)/Concurrency.xcodeproj/GeneratedModuleMap/ObjCBridges",
				);
				INFOPLIST_FILE = Concurrency.xcodeproj/ConcurrencyTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited) -Xcc -fmodule-map-file=$(SRCROOT)/Concurrency.xcodeproj/GeneratedModuleMap/ObjCBridges/module.modulemap";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = ConcurrencyTests;
			};
			name = Release;
		};
		OBJ_79 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DEFINES_MODULE = NO;
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/Sources/ObjCBridges/include",
				);
				INFOPLIST_FILE = Concurrency.xcodeproj/ObjCBridges_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = ObjCBridges;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				TARGET_NAME = ObjCBridges;
			};
			name = Debug;
		};
		OBJ_80 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DEFINES_MODULE = NO;
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/Sources/ObjCBridges/include",
				);
				INFOPLIST_FILE = Concurrency.xcodeproj/ObjCBridges_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = ObjCBridges;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				TARGET_NAME = ObjCBridges;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "Concurrency" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_36 /* Build configuration list for PBXNativeTarget "Concurrency" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_37 /* Debug */,
				OBJ_38 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_53 /* Build configuration list for PBXNativeTarget "ConcurrencyPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_54 /* Debug */,
				OBJ_55 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_59 /* Build configuration list for PBXAggregateTarget "ConcurrencyPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_60 /* Debug */,
				OBJ_61 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_64 /* Build configuration list for PBXNativeTarget "ConcurrencyTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_65 /* Debug */,
				OBJ_66 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_78 /* Build configuration list for PBXNativeTarget "ObjCBridges" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_79 /* Debug */,
				OBJ_80 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
